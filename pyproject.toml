[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
requires-python = ">=3.8,<3.11"
name = "openpredict"
description = "A package to help serve predictions of biomedical concepts associations as Translator Reasoner API."
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "Remzi Ã‡elebi", email = "r.celebi@maastrichtuniversity.nl" },
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
    { name = "Arif Yilmaz" },
    { name = "Elif" },
]
keywords = [
    "Python",
    "Biomedical Data Translator",
    "TRAPI",
    "Predictions"
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]

dependencies = [
    "requests >=2.23.0",
    "pydantic >=1.9",
    "fastapi >=0.68.1",
    "rdflib >=6.1.1",
    "SPARQLWrapper >=2.0.0,<3.0.0",
    # "mlem",
    "mlem==0.3.2",
    "reasoner-pydantic ==3.0.1",
    # "fairworkflows",
    # "fairworkflows@git+https://github.com/vemonet/fairworkflows.git",
    # "yatiml >=0.10.0",
]

[project.optional-dependencies]
train = [
    "numpy ==1.16.1", # requires python 3.8
    "pandas ==1.1.1",
    "torch==1.13.1",
    "networkx",
    "gensim ==3.8.3",
    "scipy ==1.5.4",
    # scipy==0.19.1
    ## Cannot update to numpy1.16.5 because it requires werkzeug>=2.0
    # numpy==1.16.5
    # werkzeug>=2.0
    "cython==0.29.32",
    "pyspark ==3.1.1",
    # "findspark",
    "scikit-learn ==0.23.1",
    "shap==0.41.0",
    "matplotlib==3.4.3",
    "pyRDF2vec==0.0.5",
    "python-multipart >=0.0.5",
    # "httpx >=0.21.1",
]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "reasoner-validator >=3.3.1",
    "httpx",
]
dev = [
    "typer==0.7.0",
    "pre-commit >=2.17.0,<3.0.0",
    # "uvicorn >=0.15.0",
    # "gunicorn >=20.0.4",
    "dvc==2.38.1",
    # "dagshub",
    "ruff >=0.0.219",
    "pip-tools",
    "types-requests",
    # "jupyter",
    # "notebook",
]
doc = [
    "mkdocs >=1.4.2",
    "mkdocs-material >=8.2.7",
    "mkdocstrings[python] >=0.19.1",
    "mdx-include >=1.4.1",
    "mkdocs-markdownextradata-plugin >=0.2.5",
]


[project.urls]
Homepage = "https://github.com/MaastrichtU-IDS/translator-openpredict"
Documentation = "https://github.com/MaastrichtU-IDS/translator-openpredict"
History = "https://github.com/MaastrichtU-IDS/translator-openpredict/releases"
Tracker = "https://github.com/MaastrichtU-IDS/translator-openpredict/issues"
Source = "https://github.com/MaastrichtU-IDS/translator-openpredict"


[tool.hatch.build.targets.wheel]
packages = ["src/openpredict"]

# [project.scripts]
# openpredict = "openpredict.__main__:main"


# HATCH CONFIG: ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
# type = "container"
# image = "ghcr.io/maastrichtu-ids/openpredict-api:0.1.0"
# command = ["/bin/sleep", "infinity"]
# start-on-creation = false
features = [
    "test",
    "dev",
    "doc",
    # "train",
]
post-install-commands = [
    "pre-commit install",
    "dvc pull"
]

[tool.hatch.envs.default.scripts]
docs = "mkdocs serve -a localhost:8001 {args}"
fmt = "ruff src tests --fix"
check = "ruff src tests"
test-prod = "pytest tests/production"
compile = "pip-compile --extra dev --extra test --extra train -o requirements.txt pyproject.toml"
fix-permission = "sudo chown -R $(id -u):$(id -g) models data"
# train = "python src/openpredict_model/train.py train-model"


[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/openpredict/__init__.py"


# OTHER TOOLS

[tool.coverage.run]
source = ["src/openpredict"]
branch = true
[tool.coverage.report]
omit = ["tests/*"]


[tool.ruff]
src = ["src", "tests"]
target-version = "py38"
line-length = 120
select = [
    "A",
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "E",  # pycodestyle errors
    "F",  # pyflakes
    # "FBT", # flake8-boolean-trap
    "I",  # isort
    "ICN",
    "N",
    "PLC",
    "PLE",
    # "PLR", # Magic value used in comparison, consider replacing the str with a constant variable
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",  # pycodestyle warnings
    "YTT",
]

ignore = [
    "Q000", # no single quotes
    "N806", "N802", "N803", # lowercase variables
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "B006", # do not use mutable data structures for argument defaults
    "C901", # too complex
    "S101", # Use of `assert` detected
    "T201", "T203", # remove print and pprint
    "A003", # Class attribute `type` is shadowing a python builtin
    "SIM118", # dont use .keys()
]

[tool.ruff.per-file-ignores]
"__init__.py" = [ "I", "F401" ]
