[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
version = "0.1.0"
requires-python = ">=3.8,<3.11"
# requires-python = ">=3.8,<3.9"
name = "openpredict"
description = "An API to compute and serve predictions of biomedical concepts associations via OpenAPI for the NCATS Translator project"
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "Remzi Ã‡elebi", email = "r.celebi@maastrichtuniversity.nl" },
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
    { name = "Arif Yilmaz" },
    { name = "Elif" },
]
keywords = [
    "Python",
    "Biomedical Data Translator",
    "TRAPI",
    "Predictions"
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
]

dependencies = [
    "dvc",
    "dagshub",
    "requests >=2.23.0",
    "pydantic >=1.9",
    "reasoner-pydantic >=2.2.3",
    # "reasoner-pydantic >=3.0.0",
    "reasoner-validator >=3.1.4",
    "rdflib >=6.1.1",
    "fastapi >=0.68.1",
    "SPARQLWrapper >=2.0.0,<3.0.0",
    "pandas",
    "click",
]

[project.scripts]
openpredict = "openpredict.__main__:main"


[project.optional-dependencies]
train = [
    "numpy ==1.16.1", # requires python 3.8
    "pandas ==1.1.1",
    "torch",
    "networkx",
    "gensim ==3.8.3",
    "joblib",
    "scipy ==1.5.4",
    # scipy==0.19.1
    ## Cannot update to numpy1.16.5 because it requires werkzeug>=2.0
    # numpy==1.16.5
    # werkzeug>=2.0
    "cython",
    "pyspark ==3.1.1",
    "findspark",
    "scikit-learn ==0.23.1",
    "shap",
    "matplotlib",
    "pyRDF2vec",
    "python-multipart >=0.0.5",
    "httpx >=0.21.1",
]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "isort >=5.0.6,<6.0.0",
    "flake8 >=3.8.3,<6.0.0",
    "Flake8-pyproject>=1.1.0.post0",
    "flaky",
]
dev = [
    "pre-commit >=2.17.0,<3.0.0",
    "autoflake >=1.4.0,<2.0.0",
    "jupyter",
    "notebook",
    "uvicorn >=0.15.0",
    "gunicorn >=20.0.4",
    "types-requests",
]


[project.urls]
Homepage = "https://github.com/MaastrichtU-IDS/translator-openpredict"
Documentation = "https://github.com/MaastrichtU-IDS/translator-openpredict"
History = "https://github.com/MaastrichtU-IDS/translator-openpredict/releases"
Tracker = "https://github.com/MaastrichtU-IDS/translator-openpredict/issues"
Source = "https://github.com/MaastrichtU-IDS/translator-openpredict"


# include = [
#   'openpredict/data/models/*', 'openpredict/data/ontology/*', 'openpredict/data/models/*',
#   'openpredict/data/features/*', 'openpredict/data/input/*', 'openpredict/data/sparql/*', 'openpredict/data/resources/*', 'openpredict/data/*.ttl',
#   'tests/queries/*', 'openpredict/data/embedding/*'
# ]


# ENVIRONMENTS AND SCRIPTS
[tool.hatch.envs.default]
features = [
    "test",
    "dev",
]
post-install-commands = [
    "pre-commit install",
    "dvc pull"
]

[tool.hatch.envs.default.scripts]
format = [
    "isort src tests",
    "autoflake --remove-all-unused-imports --recursive --remove-unused-variables --in-place src tests --exclude=__init__.py",
    "pre-commit run --all-files || true",
]
check = [
    "isort --check-only --diff .",
    "flake8 .",
]

# TOOLS

[tool.isort]
line_length = 120
# skip = ["src/__init__.py"]


[tool.coverage.run]
source = ["project"]
branch = true

[tool.coverage.report]
omit = ["tests/*"]


[tool.flake8]
max-complexity = 17
max-line-length = 120
per-file-ignores = [
    "__init__.py:F401",
]
ignore = [
    "E501", # line too long
    "E303", # too many blank lines
    "E301", # expected 1 blank lines found 0
    "W503", # line break before binary operator
]


[tool.mypy]
strict = false
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true
plugins = [
    "pydantic.mypy"
]


[tool.pytest.ini_options]
markers = [
    "no_rsa_key: mark a test as a test only run when there is no nanopub RSA key setup.",
]
