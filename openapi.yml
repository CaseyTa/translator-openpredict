openapi: 3.0.3
info:
  contact:
    email: vincent.emonet@maastrichtuniversity.nl
    name: Institute of Data Science at Maastricht University
    url: https://maastrichtuniversity.nl/ids
  description: "Translator OpenPredict is an API to compute and serve predictions of biomedical concepts associations using the [PREDICT method](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/), for the [NCATS Translator project](https://ncats.nih.gov/translator/about). 
    \n* This service has been built from the [fair-workflows/openpredict](https://github.com/fair-workflows/openpredict) project.
    \n* This API can be queried using Translator [ReasonerStdAPI](https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI) queries.
    \n\n[![Version](https://img.shields.io/pypi/v/openpredict)](https://pypi.org/project/openpredict) [![Run tests](https://github.com/MaastrichtU-IDS/translator-openpredict/workflows/Run%20tests/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions?query=workflow%3A%22Run+tests%22) [![Publish package](https://github.com/MaastrichtU-IDS/translator-openpredict/workflows/Publish%20package/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions?query=workflow%3A%22Publish+package%22)"

  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: https://opensource.org/licenses/MIT
  title: Translator OpenPredict API üîÆüêç 
  version: '1.0'
servers:
- description: Local
  url: http://localhost:8808
- description: Maastricht University IDS server
  url: https://openpredict.137.120.31.102.nip.io
tags:
- description: Predict new biomedical associations with the Translator OpenPredict API
  name: translator
paths:

  /v1/predict:
    get:
      operationId: openpredict.openpredict_api.get_predict
      summary: Get predicted associations for a given entity
      description: "Return the predicted associations for a given entity: drug (DrugBank ID) or disease (OMIM ID), with confidence scores."
      tags:
      - translator
      parameters:
      - $ref: '#/components/parameters/entity'
      - $ref: '#/components/parameters/classifier'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json: {}
            # application/json: 
            #   schema:
            #     x-body-name: PredictionResults
            #     $ref: '#/components/schemas/PredictionResults'
            # application/xml: {}
            # application/ld+json: {}
            # text/csv: {}
            # text/tab-separated-values: {}

  /v1/predict/reasoner:
    post:
      tags:
      - translator
      summary: Retrieve predicted associations from a Reasoner API query
      description: "Retrieve predicted associations from a Translator [Reasoner API](https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI/tree/master/API) query, using entities and associations from the [BioLink model](https://biolink.github.io/biolink-model)
        \n\nTry with this example query:\n```json \n{\n  \"max_results\": 50,\n  \"message\":
        {\n    \"query_graph\": {\n      \"nodes\": [\n        { \"id\": \"n00\", \"curie\": \"DRUGBANK:DB00394\", 
        \"type\": \"Drug\" },\n        { \"id\": \"n01\", \"type\": \"Disease\"
        }\n      ],\n      \"edges\": [\n        { \"id\": \"e00\", \"type\": \"Association\",\n
        \         \"source_id\": \"n00\", \"target_id\": \"n01\" }\n      ]\n    },\n
        \   \"query_options\": {\n\t   \"https://w3id.org/biolink/vocab/has_confidence_level\":
        \"0.5\",\n    }\n  }\n}\n```"
      operationId: openpredict.openpredict_api.post_reasoner_predict
      requestBody:
        description: Reasoner API query to get predictions from
        required: true
        content:
          application/json:
            # schema: {}
            schema:
              x-body-name: ReasonerAPI query
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            # application/ld+json: {}

components:

  parameters:
    entity:
      name: entity
      in: query
      description: CURIE of the entity to process (e.g. drug, disease, etc)
      example: DRUGBANK:DB00394
      required: true
      schema:
        type: string
    classifier:
      name: classifier
      in: query
      description: Classifier to use to predict associations
      required: false
      schema:
        type: string
        enum: ["OpenPredict OMIM-DrugBank"]
        default: "OpenPredict OMIM-DrugBank"
        # enum: [openpredict_omim_drugbank]
        # type: integer
        # format: int32
        # minimum: 0
        # maximum: 10
        # default: 0

  schemas:
    PredictionResults:
      type: object
      description: Prediction results
      properties:
        results:
          type: array
          description: List of predictions
          items: 
            $ref: "#/components/schemas/Prediction"
          example: [{'source' : 'drug1', 'target': 'disease2', 'score': 0.8}]
        count:
          type: integer
          description: Number of predictions in the results
          example: 1
      required:
      - results
      - count

    Prediction:
      type: object
      description: A predicted association between 2 entities with a score
      properties:
        source:
          type: string
          description: Source of the predicted association 
          example: drug1
        target:
          type: string
          description: Target of the predicted association 
          example: bad_disease
        score:
          type: number
          description: Score of the prediction
          example: 0.8
      required:
      - source
      - target

    Query:
      x-body-name: request_body
      type: object
      description: Query to the ReasonerStdAPI
      properties:
        message:
          $ref: '#/components/schemas/Message'
      additionalProperties: true
      required:
        - message

    Message:
      required:
      - query_graph
      type: object
      additionalProperties: true
      properties:
        query_graph:
          "$ref": "#/components/schemas/QueryGraph"
        results:
          type: array
          description: List of all returned potential answers for the query posed
          items:
            "$ref": "#/components/schemas/Result"
        knowledge_graph:
          "$ref": "#/components/schemas/KnowledgeGraph"
        remote_knowledge_graph:
          "$ref": "#/components/schemas/RemoteKnowledgeGraph"
        context:
          type: string
          description: 'JSON-LD context URI (e.g.: https://rtx.ncats.io/ns/translator.jsonld)'
        type:
          type: string
          description: 'Entity type of this message (e.g.: translator_reasoner_message)'
        id:
          type: string
          description: 'URI for this message (e.g.: https://rtx.ncats.io/api/rtx/v1/message/123)'
        reasoner_id:
          type: string
          description: Identifier string of the reasoner that provided this message
            (one of trek, RTX, Robokop, Indigo, Integrator, etc.)
        tool_version:
          type: string
          description: 'Version label of the tool that generated this message (e.g.:
            RTX 0.5.0)'
        schema_version:
          type: string
          description: 'Version label of this JSON-LD schema (e.g.: 0.9.1)'
          example: 0.9.1
        datetime:
          type: string
          description: 'Datetime string for the time that this message was generated
            (e.g.: 2018-01-09 12:34:45)'
        n_results:
          type: string
          description: 'Total number of results from the query (which may be less
            than what is returned if limits were placed on the number of results to
            return) (e.g.: 42)'
        message_code:
          type: string
          description: 'Set to OK for success, or some other short string to indicate
            and error (e.g., KGUnavailable, TermNotFound, etc.) (e.g.: OK)'
        code_description:
          type: string
          description: 'Extended description denoting the success or mode of failure
            in the generation of the message (e.g.: 9 results found)'
        table_column_names:
          type: array
          description: 'List of column names that corresponds to the row_data for
            each result (e.g.: [chemical_substance.name, chemical_substance.id])'
          items:
            type: string
            description: 'List of column names that corresponds to the row_data for
              each result (e.g.: [chemical_substance.name, chemical_substance.id])'
        original_question:
          type: string
          description: 'The original question text typed in by the user (e.g.: what
            proteins are affected by sickle cell anemia)'
        restated_question:
          type: string
          description: 'A precise restatement of the question, as understood by the
            Translator, for which the answer applies. The user should verify that
            the restated question matches the intent of their original question (it
            might not). (e.g.: Which proteins are affected by sickle cell anemia?)'
        query_type_id:
          type: string
          description: 'The query type id if one is known for the query/message (as
            defined in [Google docs](https://docs.google.com/spreadsheets/d/18zW81wteUfOn3rFRVG0z8mW-ecNhdsfD_6s73ETJnUw/edit#gid=1742835901)
            ) (e.g.: Q2)'
        query_options:
          type: object
          additionalProperties:
            type: string
            description: " Dict of options that can be sent with the query. Options
              are tool specific and not stipulated here (e.g.: {coalesce=True,threshold=0.9})"
          description: " Dict of options that can be sent with the query. Options
            are tool specific and not stipulated here (e.g.: {coalesce=True,threshold=0.9})"
      description: A message containing the query to the Reasoner API.

    Credentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username needed for programmatic access to the remote knowledge
            graph
          example: myusername
        password:
          type: string
          description: Password needed for programmatic access to the remote knowledge
            graph
          example: mypassword
      description: Credentials needed for programmatic access to the remote knowledge graph

    Edge:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: Local URI or identifier for this edge, which is unique within
            this KnowledgeGraph, and perhaps within the source reasoner's knowledge
            graph, e.g. https://w3id.org/biolink/cohd/association/1_8516_941473
        type:
          type: string
          description: BioLink type of the edge
          example: Association
        source_id:
          type: string
          description: Corresponds to the id of the source node of this edge
          example: DRUGBANK:DB00394
        target_id:
          type: string
          description: Corresponds to the id of the target node of this edge
          example: OMIM:166760
      description: An edge in the query_graph linking two nodes

    EdgeBinding:
      required:
      - kg_id
      - qg_id
      type: object
      properties:
        kg_id:
          type: array
          description: One or more knowledge-graph node ids, i.e. the `id` of a KNode
          items:
            type: string
            description: One or more knowledge-graph node ids, i.e. the `id` of a
              KNode
        qg_id:
          type: string
          description: Query-graph edge id, i.e. the `edge_id` of a QEdge
      description: An Edge Binding in the Results

    KnowledgeGraph:
      type: object
      properties:
        nodes:
          type: array
          description: List of nodes in the KnowledgeGraph
          items:
            "$ref": "#/components/schemas/Node"
        edges:
          type: array
          description: List of edges in the KnowledgeGraph
          items:
            "$ref": "#/components/schemas/Edge"
      description: A thought graph associated with this result. This will commonly
        be a linear path subgraph from one concept to another, but related items aside
        of the path may be included.

    Node:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: URI or CURIE identifier for this node, e.g. DRUGBANK:DB00394, OMIM:166760
          example: DRUGBANK:DB00394
        name:
          type: string
          description: Formal name of the entity
          example: Beclomethasone dipropionate
        type:
          type: string
          description: BioLink type of the entity
          example: Drug
      description: A node in the query_graph

    NodeBinding:
      required:
      - kg_id
      - qg_id
      type: object
      properties:
        kg_id:
          type: array
          description: One or more knowledge-graph node ids, i.e. the `id` of a KNode
          items:
            type: string
            description: One or more knowledge-graph node ids, i.e. the `id` of a
              KNode
        qg_id:
          type: string
          description: Query-graph node id, i.e. the `node_id` of a QNode
      description: A Node Binding in the Results

    QEdge:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: 'QueryGraph internal identifier for this QEdge. Recommended
            form: e00, e01, e02, etc.'
          example: e00
        type:
          type: string
          description: BioLink type of the edge
          example: Association
        relation:
          type: string
          description: 'Lower-level relationship type of this edge (e.g.: upregulates)'
          example: related_to
        source_id:
          type: string
          description: Corresponds to the id of the source node of this edge
          example: n00
        target_id:
          type: string
          description: Corresponds to the id of the target node of this edge
          example: n01
        negated:
          type: boolean
          description: Boolean that if set to true, indicates the edge statement is
            negated i.e. is not true
      description: An edge in the query_graph linking two nodes

    QNode:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: 'QueryGraph internal identifier for this QNode. Recommended
            form: n00, n01, n02, etc.'
          example: n00
        curie:
          type: string
          description: URI or CURIE identifier for this node
          example: DRUGBANK:DB00394
        type:
          type: string
          description: BioLink type of the entity
          example: Drug
      description: A node in the query_graph

    QueryGraph:
      type: object
      properties:
        nodes:
          type: array
          description: List of nodes in the QueryGraph
          items:
            "$ref": "#/components/schemas/QNode"
        edges:
          type: array
          description: List of edges in the QueryGraph
          items:
            "$ref": "#/components/schemas/QEdge"
      description: A graph intended to be the thought path to be followed by a reasoner
        to answer the question. This graph is a representation of a question.

    RemoteKnowledgeGraph:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: URL that provides programmatic access to the remote knowledge
            graph
        credentials:
          "$ref": "#/components/schemas/Credentials"
        protocol:
          type: string
          description: Knowledge Graph protocol, e.g. rdf, neo4j
          example: rdf
      description: A thought graph associated with this result that is not repeated
        here, but stored elsewhere in a way that can be remotely accessed by the reader
        of this Message

    Result:
      type: object
      properties:
        node_bindings:
          type: array
          description: List of QNode-KNode bindings.
          items:
            "$ref": "#/components/schemas/NodeBinding"
        edge_bindings:
          type: array
          description: List of QEdge-KEdge bindings.
          items:
            "$ref": "#/components/schemas/EdgeBinding"
        score:
          type: number
          description: 'Any type of score associated with this result (e.g.: 163.233)'
          format: float
        score_name:
          type: string
          description: 'Name for the score (e.g.: Jaccard distance)'
        score_direction:
          type: string
          description: 'Sorting indicator for the score: one of higher_is_better or
            lower_is_better (e.g.: lower_is_better)'
        confidence:
          type: number
          description: 'Any type of score associated with this result (e.g.: 163.233)'
          format: float
        id:
          type: string
          description: 'URI for this message (e.g.: https://rtx.ncats.io/api/rtx/v1/result/234)'
        description:
          type: string
          description: 'A free text description of this result answer from the reasoner
            (e.g.: The genetic condition sickle cell anemia may provide protection)'
        essence:
          type: string
          description: 'A single string that is the terse essence of the result (useful
            for simple answers) (e.g.: ibuprofen)'
        essence_type:
          type: string
          description: 'A Translator bioentity type of the essence (e.g.: drug)'
        row_data:
          type: array
          description: 'An arbitrary list of values that captures the essence of the
            result that can be turned into a tabular result across all answers (each
            result is a row) for a user that wants tabular output (e.g.: [ ibuprofen,
            CHEMBL:CHEMBL521 ])'
          items:
            type: string
            description: 'An arbitrary list of values that captures the essence of
              the result that can be turned into a tabular result across all answers
              (each result is a row) for a user that wants tabular output (e.g.: [
              ibuprofen, CHEMBL:CHEMBL521 ])'
        result_type:
          type: string
          description: 'One of several possible result types: ''individual query answer'',
            ''neighborhood graph'', ''type summary graph'''
        result_group:
          type: integer
          description: 'An integer group number for results for use in cases where
            several results should be grouped together. Also useful to control sorting
            ascending. (e.g.: 1)'
          format: int32
        result_group_similarity_score:
          type: number
          description: 'A score that denotes the similarity of this result to other
            members of the result_group (e.g.: 0.95)'
          format: float
        reasoner_id:
          type: string
          description: Identifier string of the reasoner that provided this message
            (one of trek, RTX, Robokop, Indigo, Integrator, etc.)
      description: One of potentially several results or answers for a query
